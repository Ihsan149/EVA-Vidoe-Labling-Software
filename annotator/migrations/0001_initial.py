# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2018-06-19 08:33
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Name of class label option.', max_length=100, unique=True)),
                ('color', models.CharField(editable=False, max_length=6)),
                ('class_number', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='UploadFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(default='videos/None/no-img.jpg', upload_to='videos/')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotation', models.TextField(blank=True, help_text='A JSON blob containing all user annotation sent from client.')),
                ('source', models.CharField(blank=True, help_text='Name of video source or type, for easier grouping/searching of videos.This field is not used by BeaverDam and only facilitates querying on videos by type.', max_length=1048)),
                ('filename', models.CharField(blank=True, help_text='Name of the video file.The video should be publically accessible by at <host><filename>.', max_length=100)),
                ('image_list', models.TextField(blank=True, help_text='List of filenames of images to be used as video frames, in JSON format.When present, image list is assumed and <filename> is ignored.')),
                ('host', models.CharField(blank=True, help_text='Path to prepend to filenames to form the url for this video or the images in `image_list`.', max_length=1048)),
                ('verified', models.BooleanField(default=False, help_text='Verified as correct by expert.')),
                ('rejected', models.BooleanField(default=False, help_text='Rejected by expert.')),
                ('cache_file', models.CharField(blank=True, max_length=200)),
                ('labels', models.ManyToManyField(blank=True, to='annotator.Label')),
            ],
        ),
    ]
